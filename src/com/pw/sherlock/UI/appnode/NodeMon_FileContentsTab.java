/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pw.sherlock.UI.appnode;

import com.pw.sherlock.OshiImpls.OshiMiscFuncs;
import com.pw.sherlock.UI.Home;
import com.pw.sherlock.utils.SherlockUtils;
import javax.swing.JTabbedPane;
import javax.swing.SwingUtilities;
import javax.swing.text.DefaultCaret;
import org.apache.log4j.Logger;

/**
 *
 * @author pwankhed
 */
public class NodeMon_FileContentsTab extends javax.swing.JPanel {
	
	OshiMiscFuncs oshiObj;
	private final Logger AgentMonFiletab = Logger.getLogger(NodeMon_FileContentsTab.class);
	SherlockUtils utilsObj = new SherlockUtils();
	private String serviceType;
	
	public NodeMon_FileContentsTab(String httpPort, String OSGiCmd) {
		initComponents();
		try {
			SwingUtilities.invokeLater(new Runnable() {
				@Override
				public void run() {
					serviceType = OSGiCmd;
					String url = "http://" + Home.master_agentHostName.trim() + ":" + httpPort.trim() + "/bw/framework.json/osgi?command=" + OSGiCmd;
					String NodeServiceResponse = utilsObj.processOSGiCommands(url, "Node Services: " + OSGiCmd);
					
					fileContent_TextArea.setEditable(false);
					DefaultCaret caret = (DefaultCaret) fileContent_TextArea.getCaret();
					caret.setUpdatePolicy(DefaultCaret.NEVER_UPDATE);
					fileContent_TextArea.getCaret().setVisible(true);
					fileContent_TextArea.getCaret().setSelectionVisible(true);
					
					if (NodeServiceResponse.toString().equals("Error")) {
						fileContent_TextArea.setText(NodeServiceResponse.toString() + " - Exception occured while processing the HTTP request for OSGI command, please check Sherlock logs for more details");
					} else {
						fileContent_TextArea.setText(NodeServiceResponse.toString());
					}
				}
			});
		} catch (Exception ex) {
			AgentMonFiletab.error("Exception occured while processing OSGi command requested by NodeMon_FileContentsTab()" 
					+ "'. Exception details are: " + ex.getMessage());
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        closeTdTab = new javax.swing.JButton();
        tdScrollPane = new javax.swing.JScrollPane();
        fileContent_TextArea = new javax.swing.JTextArea();

        closeTdTab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pw/sherlock/resources/icons8-close-window-24.png"))); // NOI18N
        closeTdTab.setToolTipText("Close");
        closeTdTab.setBorderPainted(false);
        closeTdTab.setContentAreaFilled(false);
        closeTdTab.setFocusPainted(false);
        closeTdTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeTdTabActionPerformed(evt);
            }
        });

        fileContent_TextArea.setColumns(20);
        fileContent_TextArea.setLineWrap(true);
        fileContent_TextArea.setRows(5);
        fileContent_TextArea.setWrapStyleWord(true);
        fileContent_TextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        tdScrollPane.setViewportView(fileContent_TextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tdScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 875, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(closeTdTab, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(closeTdTab, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tdScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void closeTdTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeTdTabActionPerformed
		SwingUtilities.getAncestorOfClass(JTabbedPane.class, this).remove(this);
		if (serviceType.equals("frwk:lloggers")){
			NodeMon_BasePane.nodeLogbackSwitch.setSelected(false);
		}else{
		NodeMon_BasePane.nodeTraSwitch.setSelected(false);
		}
    }//GEN-LAST:event_closeTdTabActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeTdTab;
    private javax.swing.JTextArea fileContent_TextArea;
    private javax.swing.JScrollPane tdScrollPane;
    // End of variables declaration//GEN-END:variables
}
