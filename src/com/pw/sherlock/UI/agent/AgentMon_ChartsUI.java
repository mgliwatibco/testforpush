/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pw.sherlock.UI.agent;

import com.pw.sherlock.UI.agent.AgentMon_BasePane;
import com.pw.sherlock.charts.AgentRecourceMon_IMPL;
import static com.pw.sherlock.UI.Home.master_pollingInterval;
import java.awt.Component;
import java.awt.Graphics;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.SwingUtilities;
import org.knowm.xchart.XChartPanel;

/**
 *
 * @author pwankhed
 */
public class AgentMon_ChartsUI extends javax.swing.JPanel {

	/**
	 * Creates new form AgentMon_ChartsUI
	 */
	private boolean painted;
	private AgentRecourceMon_IMPL agentObj;
	private Component memChart;
	private Component cpuChart;
	private Timer agentMonTimer;

	public AgentMon_ChartsUI() {
		initComponents();
		agentObj = new AgentRecourceMon_IMPL();
		memChart = new XChartPanel(agentObj.getAgentMemChart());
		cpuChart = new XChartPanel(agentObj.getAgentCpuChart());
		agentMonTimer = new Timer();

		CpuMemSplitPane.setLeftComponent(cpuChart);
		CpuMemSplitPane.setRightComponent(memChart);
		refreshAgentUtilizationData();
	}

	private void refreshAgentUtilizationData() {
		//Get the memory details from BW Agent on agentMonTimer tick and repaint the chart
		TimerTask updateAgentDetailsTask = new TimerTask() {
			@Override
			public void run() {
				//Get the memory details from BW Agent 
				agentObj.updateData();
				agentResourceInfoLbl.setText(AgentRecourceMon_IMPL.agentResourceInfoLbl_Source);
				agentUptimeLbl.setText(AgentRecourceMon_IMPL.agentResourceUpTimeLbl_Source);
				javax.swing.SwingUtilities.invokeLater(new Runnable() {
					@Override
					public void run() {
						if (cpuChart != null && memChart != null) {
							memChart.repaint();
							cpuChart.repaint();
							agentResourceInfoPane.repaint();
							//System.out.println("This is from Agent monitor timer task...");
						}
					}
				});
			}
		};

		agentMonTimer.scheduleAtFixedRate(updateAgentDetailsTask, 0, master_pollingInterval);
	}

	@Override
	public void removeNotify() {
		super.removeNotify();
		agentMonTimer.cancel();
		agentMonTimer.purge();
		agentMonTimer = null;
		agentObj = null;
		cpuChart = null;
		memChart = null;
	}

	@Override
	public void paint(Graphics g) {
		super.paint(g);
		if (!painted) {
			painted = true;
			CpuMemSplitPane.setDividerLocation(0.50);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        agentResourceInfoPane = new javax.swing.JPanel();
        agentResourceInfoLbl = new javax.swing.JLabel();
        agentUptimeLbl = new javax.swing.JLabel();
        closeAgentMonTab = new javax.swing.JButton();
        CpuMemSplitPane = new javax.swing.JSplitPane();

        agentResourceInfoLbl.setText("Loading...");

        agentUptimeLbl.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        agentUptimeLbl.setText("Uptime:");

        closeAgentMonTab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pw/sherlock/resources/icons8-close-window-24.png"))); // NOI18N
        closeAgentMonTab.setToolTipText("Close");
        closeAgentMonTab.setBorderPainted(false);
        closeAgentMonTab.setContentAreaFilled(false);
        closeAgentMonTab.setFocusPainted(false);
        closeAgentMonTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeAgentMonTabActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout agentResourceInfoPaneLayout = new javax.swing.GroupLayout(agentResourceInfoPane);
        agentResourceInfoPane.setLayout(agentResourceInfoPaneLayout);
        agentResourceInfoPaneLayout.setHorizontalGroup(
            agentResourceInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agentResourceInfoPaneLayout.createSequentialGroup()
                .addComponent(agentResourceInfoLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(agentUptimeLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeAgentMonTab, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        agentResourceInfoPaneLayout.setVerticalGroup(
            agentResourceInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(closeAgentMonTab, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(agentResourceInfoPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(agentResourceInfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agentUptimeLbl)
                    .addComponent(agentResourceInfoLbl))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CpuMemSplitPane.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), new java.awt.Color(153, 153, 153)));
        CpuMemSplitPane.setDividerLocation(650);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CpuMemSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 744, Short.MAX_VALUE)
                    .addComponent(agentResourceInfoPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(agentResourceInfoPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CpuMemSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void closeAgentMonTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeAgentMonTabActionPerformed
        // TODO add your handling code here:
        try {
            int dialogResult = JOptionPane.showConfirmDialog(null, "Closing this tab and reopening it later will not show the historic monitoring"
                + " statistics. Are you sure you want to close this tab?", "Warning", JOptionPane.YES_NO_CANCEL_OPTION);
            if (dialogResult == JOptionPane.YES_OPTION) {
                SwingUtilities.getAncestorOfClass(JTabbedPane.class, this).remove(this);
                AgentMon_BasePane.agentMonSwitch.setSelected(false);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_closeAgentMonTabActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JSplitPane CpuMemSplitPane;
    private javax.swing.JLabel agentResourceInfoLbl;
    private javax.swing.JPanel agentResourceInfoPane;
    private javax.swing.JLabel agentUptimeLbl;
    private javax.swing.JButton closeAgentMonTab;
    // End of variables declaration//GEN-END:variables
}
